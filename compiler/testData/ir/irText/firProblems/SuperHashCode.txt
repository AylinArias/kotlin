FILE fqName:<root> fileName:/SuperHashCode.kt
  CLASS INTERFACE name:Point modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Point
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:DelegatePoint modality:FINAL visibility:public superTypes:[<root>.Point]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.DelegatePoint
    CONSTRUCTOR visibility:public <> (original:<root>.Point?) returnType:<root>.DelegatePoint [primary]
      VALUE_PARAMETER name:original index:0 type:<root>.Point?
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:DelegatePoint modality:FINAL visibility:public superTypes:[<root>.Point]'
    PROPERTY name:original visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:original type:<root>.Point? visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'original: <root>.Point? declared in <root>.DelegatePoint.<init>' type=<root>.Point? origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-original> visibility:public modality:FINAL <> ($this:<root>.DelegatePoint) returnType:<root>.Point?
        correspondingProperty: PROPERTY name:original visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.DelegatePoint
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-original> (): <root>.Point? declared in <root>.DelegatePoint'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:original type:<root>.Point? visibility:private [final]' type=<root>.Point? origin=null
              receiver: GET_VAR '<this>: <root>.DelegatePoint declared in <root>.DelegatePoint.<get-original>' type=<root>.DelegatePoint origin=null
    FUN name:hashCode visibility:public modality:OPEN <> ($this:<root>.DelegatePoint) returnType:kotlin.Int
      overridden:
        public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.Point
      $this: VALUE_PARAMETER name:<this> type:<root>.DelegatePoint
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in <root>.DelegatePoint'
          BLOCK type=kotlin.Int origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.Int? [val]
              BLOCK type=kotlin.Int? origin=SAFE_CALL
                VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:<root>.Point? [val]
                  CALL 'public final fun <get-original> (): <root>.Point? declared in <root>.DelegatePoint' type=<root>.Point? origin=GET_PROPERTY
                    $this: GET_VAR '<this>: <root>.DelegatePoint declared in <root>.DelegatePoint.hashCode' type=<root>.DelegatePoint origin=null
                WHEN type=kotlin.Int? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR 'val tmp_1: <root>.Point? [val] declared in <root>.DelegatePoint.hashCode' type=<root>.Point? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: CONST Null type=kotlin.Nothing? value=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.Point' type=kotlin.Int origin=null
                      $this: GET_VAR 'val tmp_1: <root>.Point? [val] declared in <root>.DelegatePoint.hashCode' type=<root>.Point? origin=null
            WHEN type=kotlin.Int origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'val tmp_0: kotlin.Int? [val] declared in <root>.DelegatePoint.hashCode' type=kotlin.Int? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CALL 'public open fun hashCode (): kotlin.Int declared in kotlin.Any' superQualifier='CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Any modality:OPEN visibility:public superTypes:[]' type=kotlin.Int origin=null
                  $this: GET_VAR '<this>: <root>.DelegatePoint declared in <root>.DelegatePoint.hashCode' type=<root>.DelegatePoint origin=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: GET_VAR 'val tmp_0: kotlin.Int? [val] declared in <root>.DelegatePoint.hashCode' type=kotlin.Int? origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in <root>.Point
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String [fake_override] declared in <root>.Point
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
